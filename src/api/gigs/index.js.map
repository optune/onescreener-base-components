{"version":3,"file":"index.js","sources":["index.js"],"sourcesContent":["import 'isomorphic-fetch' // makes fetch() available\nimport { ApiProviders } from './apis/index.js'\nimport { transformVenue } from './utils/transformVenue.js'\n\nexport const Type = {\n  MONTH: 'month',\n  GIG: 'gig',\n}\n\nconst fetchGigs = url =>\n  new Promise((resolve, reject) => {\n    let res = { ok: false }\n    try {\n      fetch(url).then(res => {\n        try {\n          resolve(res.json())\n        } catch (e) {\n          console.error('Parse error', e)\n          reject('Parsing failed')\n        }\n      })\n    } catch (e) {\n      console.error('fetching failed', e)\n      reject('Fetch failed')\n    }\n  })\n\nconst transformGigs = api => includeMonthTitle => events => {\n  const gigs = []\n\n  let previousYear = 0\n  let previousMonth = 0\n\n  events\n    .map(api.transformEvent)\n    .map(transformVenue)\n    .sort((a, b) => a.startDate.date - b.startDate.date)\n    .forEach(event => {\n      if (includeMonthTitle) {\n        const { year, month } = event.startDate\n\n        if (year > previousYear || month > previousMonth) {\n          gigs.push({\n            type: Type.MONTH,\n            year,\n            month,\n          })\n          previousYear = year\n          previousMonth = month\n        }\n      }\n\n      gigs.push({\n        type: Type.GIG,\n        ...event,\n      })\n    })\n\n  return gigs\n}\n\nexport const getGigs = async ({\n  provider,\n  slug,\n  limit,\n  includeMonthTitle,\n  includePast,\n  ...other\n}) => {\n  const api = ApiProviders.OPTUNE\n\n  const data = await fetchGigs(api.url(slug, limit, includePast)).catch(() => {\n    return []\n  })\n\n  // result should always be an array with plain events\n  const gigs = !!api.extractEvents ? api.extractEvents(data) : data\n\n  return transformGigs(api)(includeMonthTitle)(gigs)\n}\n"],"names":["Type","MONTH","GIG","fetchGigs","url","Promise","resolve","reject","fetch","then","res","json","e","console","error","transformGigs","api","includeMonthTitle","events","gigs","previousYear","previousMonth","map","transformEvent","transformVenue","sort","a","b","startDate","date","forEach","event","year","month","push","type","getGigs","provider","slug","limit","includePast","other","ApiProviders","OPTUNE","data","catch","extractEvents"],"mappings":";;;;MAIaA,IAAI,GAAG;AAClBC,EAAAA,KAAK,EAAE,OADW;AAElBC,EAAAA,GAAG,EAAE;AAFa;;AAKpB,MAAMC,SAAS,GAAGC,GAAG,IACnB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAE/B,MAAI;AACFC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CAAWK,IAAX,CAAgBC,GAAG,IAAI;AACrB,UAAI;AACFJ,QAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,EAAD,CAAP;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAc,aAAd,EAA6BF,CAA7B;AACAL,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACD;AACF,KAPD;AAQD,GATD,CASE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,iBAAd,EAAiCF,CAAjC;AACAL,IAAAA,MAAM,CAAC,cAAD,CAAN;AACD;AACF,CAfD,CADF;;AAkBA,MAAMQ,aAAa,GAAGC,GAAG,IAAIC,iBAAiB,IAAIC,MAAM,IAAI;AAC1D,QAAMC,IAAI,GAAG,EAAb;AAEA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,aAAa,GAAG,CAApB;AAEAH,EAAAA,MAAM,CACHI,GADH,CACON,GAAG,CAACO,cADX,EAEGD,GAFH,CAEOE,cAFP,EAGGC,IAHH,CAGQ,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,CAAYC,IAAZ,GAAmBF,CAAC,CAACC,SAAF,CAAYC,IAHjD,EAIGC,OAJH,CAIWC,KAAK,IAAI;AAChB,QAAId,iBAAJ,EAAuB;AACrB,YAAM;AAAEe,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACH,SAA9B;;AAEA,UAAII,IAAI,GAAGZ,YAAP,IAAuBa,KAAK,GAAGZ,aAAnC,EAAkD;AAChDF,QAAAA,IAAI,CAACe,IAAL,CAAU;AACRC,UAAAA,IAAI,EAAEnC,IAAI,CAACC,KADH;AAER+B,UAAAA,IAFQ;AAGRC,UAAAA;AAHQ,SAAV;AAKAb,QAAAA,YAAY,GAAGY,IAAf;AACAX,QAAAA,aAAa,GAAGY,KAAhB;AACD;AACF;;AAEDd,IAAAA,IAAI,CAACe,IAAL,CAAU;AACRC,MAAAA,IAAI,EAAEnC,IAAI,CAACE,GADH;AAER,SAAG6B;AAFK,KAAV;AAID,GAvBH;AAyBA,SAAOZ,IAAP;AACD,CAhCD;;MAkCaiB,OAAO,GAAG,OAAO;AAC5BC,EAAAA,QAD4B;AAE5BC,EAAAA,IAF4B;AAG5BC,EAAAA,KAH4B;AAI5BtB,EAAAA,iBAJ4B;AAK5BuB,EAAAA,WAL4B;AAM5B,KAAGC;AANyB,CAAP,KAOjB;AACJ,QAAMzB,GAAG,GAAG0B,YAAY,CAACC,MAAzB;AAEA,QAAMC,IAAI,GAAG,MAAMzC,SAAS,CAACa,GAAG,CAACZ,GAAJ,CAAQkC,IAAR,EAAcC,KAAd,EAAqBC,WAArB,CAAD,CAAT,CAA6CK,KAA7C,CAAmD,MAAM;AAC1E,WAAO,EAAP;AACD,GAFkB,CAAnB,CAHI;;AAQJ,QAAM1B,IAAI,GAAG,CAAC,CAACH,GAAG,CAAC8B,aAAN,GAAsB9B,GAAG,CAAC8B,aAAJ,CAAkBF,IAAlB,CAAtB,GAAgDA,IAA7D;AAEA,SAAO7B,aAAa,CAACC,GAAD,CAAb,CAAmBC,iBAAnB,EAAsCE,IAAtC,CAAP;AACD;;;;"}