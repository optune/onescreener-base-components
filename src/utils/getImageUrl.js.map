{"version":3,"file":"getImageUrl.js","sources":["getImageUrl.js"],"sourcesContent":["/* global window */\n\nconst CLOUDINARY_URL = 'https://res.cloudinary.com/optune-me/image/upload'\n\nconst transformation = {\n  ssr: ({ fullscreen = false }) => `q_auto:eco,f_auto,c_fit,w_1000,h_1000,e_pixelate:3`,\n\n  client: ({ width, height, fullscreen = false }) =>\n    `q_auto:best,f_auto,c_fit${width ? `,w_${width}` : ''}${height ? `,h_${height}` : ''}`,\n}\n\nexport const getImageUrl = isClient => ({ image, fullscreen, maxWidth = 100, maxHeight = 100 }) => {\n  let imageUrl\n\n  if (image?.url > '') {\n    const imageParts = image.url.split('/')\n    const imageSeparatorIndex = imageParts.findIndex(part => part === 'upload') + 1\n    const imagePath = imageParts.slice(imageSeparatorIndex)\n\n    let imageTransformation = ''\n    if (isClient) {\n      const windowWith = window?.innerWidth || 1000\n      const windowHeight = window?.innerHeight || 1000\n      const imageWidth = Math.round((windowWith * maxWidth) / 100)\n      const imageHeight = Math.round((windowHeight * maxHeight) / 100)\n      const width = imageWidth > imageHeight ? imageWidth : undefined\n      const height = imageWidth < imageHeight ? imageHeight : undefined\n\n      imageTransformation = transformation.client({ width, height, fullscreen })\n    } else {\n      imageTransformation = transformation.ssr({ fullscreen, width: 800, height: 800 })\n    }\n\n    imageUrl = `${CLOUDINARY_URL}/${imageTransformation}/${imagePath.join('/')}`\n  }\n\n  return imageUrl\n}\n"],"names":["CLOUDINARY_URL","transformation","ssr","fullscreen","client","width","height","getImageUrl","isClient","image","maxWidth","maxHeight","imageUrl","url","imageParts","split","imageSeparatorIndex","findIndex","part","imagePath","slice","imageTransformation","windowWith","window","innerWidth","windowHeight","innerHeight","imageWidth","Math","round","imageHeight","undefined","join"],"mappings":"AAAA;AAEA,MAAMA,cAAc,GAAG,mDAAvB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,CAAC;AAAEC,IAAAA,UAAU,GAAG;AAAf,GAAD,KAA6B,oDADb;AAGrBC,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBH,IAAAA,UAAU,GAAG;AAA9B,GAAD,KACL,2BAA0BE,KAAK,GAAI,MAAKA,KAAM,EAAf,GAAmB,EAAG,GAAEC,MAAM,GAAI,MAAKA,MAAO,EAAhB,GAAoB,EAAG;AAJlE,CAAvB;MAOaC,WAAW,GAAGC,QAAQ,IAAI,CAAC;AAAEC,EAAAA,KAAF;AAASN,EAAAA,UAAT;AAAqBO,EAAAA,QAAQ,GAAG,GAAhC;AAAqCC,EAAAA,SAAS,GAAG;AAAjD,CAAD,KAA4D;AACjG,MAAIC,QAAJ;;AAEA,MAAI,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,GAAP,IAAa,EAAjB,EAAqB;AACnB,UAAMC,UAAU,GAAGL,KAAK,CAACI,GAAN,CAAUE,KAAV,CAAgB,GAAhB,CAAnB;AACA,UAAMC,mBAAmB,GAAGF,UAAU,CAACG,SAAX,CAAqBC,IAAI,IAAIA,IAAI,KAAK,QAAtC,IAAkD,CAA9E;AACA,UAAMC,SAAS,GAAGL,UAAU,CAACM,KAAX,CAAiBJ,mBAAjB,CAAlB;AAEA,QAAIK,mBAAmB,GAAG,EAA1B;;AACA,QAAIb,QAAJ,EAAc;AAAA;;AACZ,YAAMc,UAAU,GAAG,YAAAC,MAAM,UAAN,0CAAQC,UAAR,KAAsB,IAAzC;AACA,YAAMC,YAAY,GAAG,aAAAF,MAAM,UAAN,4CAAQG,WAAR,KAAuB,IAA5C;AACA,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYP,UAAU,GAAGZ,QAAd,GAA0B,GAArC,CAAnB;AACA,YAAMoB,WAAW,GAAGF,IAAI,CAACC,KAAL,CAAYJ,YAAY,GAAGd,SAAhB,GAA6B,GAAxC,CAApB;AACA,YAAMN,KAAK,GAAGsB,UAAU,GAAGG,WAAb,GAA2BH,UAA3B,GAAwCI,SAAtD;AACA,YAAMzB,MAAM,GAAGqB,UAAU,GAAGG,WAAb,GAA2BA,WAA3B,GAAyCC,SAAxD;AAEAV,MAAAA,mBAAmB,GAAGpB,cAAc,CAACG,MAAf,CAAsB;AAAEC,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBH,QAAAA;AAAjB,OAAtB,CAAtB;AACD,KATD,MASO;AACLkB,MAAAA,mBAAmB,GAAGpB,cAAc,CAACC,GAAf,CAAmB;AAAEC,QAAAA,UAAF;AAAcE,QAAAA,KAAK,EAAE,GAArB;AAA0BC,QAAAA,MAAM,EAAE;AAAlC,OAAnB,CAAtB;AACD;;AAEDM,IAAAA,QAAQ,GAAI,GAAEZ,cAAe,IAAGqB,mBAAoB,IAAGF,SAAS,CAACa,IAAV,CAAe,GAAf,CAAoB,EAA3E;AACD;;AAED,SAAOpB,QAAP;AACD;;;;"}